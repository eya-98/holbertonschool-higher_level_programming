Importing the function from the module:
	   >>> MyList = __import__("1-my_list").MyList

Checking for module docstring:
         >>> m = __import__("1-my_list").__doc__
         >>> len(m) > 1
         True

Checking for class docstring:
         >>> m = __import__("1-my_list").MyList.__doc__
         >>> len(m) > 1
         True

Checking for method docstring:
	  >>> m = __import__("1-my_list").MyList.print_sorted.__doc__
	  >>> len(m) > 1
	  True

Checking that MyList inherits from list:
	  >>> issubclass(MyList, list)
	  True

Checking for empty list:
	  >>> l = MyList()
	  >>> l.print_sorted()
	  []

Checking that appendng works:
	  >>> l.append(1)
	  >>> l.append(2)
	  >>> l.append(3)
	  >>> l.append(4)
	  >>> print(l)
	  [1, 2, 3, 4]

Checking for reversed order list:
	  >>> l = MyList()
	  >>> l.append(4)
	  >>> l.append(3)
	  >>> l.append(2)
	  >>> l.append(1)
	  >>> print(l)
	  [4, 3, 2, 1]
	  >>> l.print_sorted()
	  [1, 2, 3, 4]
	  >>> print(l)
	  [4, 3, 2, 1]

Checking for one negative number:
	  >>> l.append(-1)
	  >>> print(l)
	  [4, 3, 2, 1, -1]
	  >>> l.print_sorted()
	  [-1, 1, 2, 3, 4]

Checking for too many arguments:
	  >>> l.print_sorted(1)
	  Traceback (most recent call last):
	  ...
	  TypeError: print_sorted() takes 1 positional argument but 2 were given
